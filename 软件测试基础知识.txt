什么是软件测试？
	通过人工方式或自动化手段对被测对象进行检测的活动，目的在于发现被测对象是否满足用户需求，或者弄清楚实际结果与预期结果的差异。

	什么是软件？
		包括源代码、用户手册、配置数据。
		具体：实现用户需求的源代码、与之相匹配的文档、支撑其运行的配置数据。


软件测试目的？
	1、发现被测对象与用户需求的差异，俗称bug；
	2、通过测试活动，发现并解决缺陷，增加人们对被测对象的质量信息；
	3、通过测试活动，获取被测对象的质量信息，为决策提供数据依据，例如是否发布。
	4、通过测试活动，预防缺陷，从而降低项目或产品的风险。


软件测试原则？
	1、测试证明软件存在缺陷
	2、不可能执行穷尽测试
	3、测试应该尽早启动，尽早介入
	4、缺陷存在群集现象：
		某个功能部件发现的缺陷越多，找到它更多未发现的缺陷的可能性就越大。
		20%的功能是用户用的最多的，但是复杂度可能是整个系统复杂度的80%，所以应该将核心资源放在那20%的功能上。
	5、杀虫剂悖论：
		必须不断的编写新的不同的测试用例来检测程序的不同部分从而找出更多bug。
	6、不同的测试活动依赖不同的测试背景：
		例如：金融产品业务关注安全性和性能，电商系统更关注功能和兼容等。
	7、不存缺陷的悖论：
		一个产品即便没有缺陷，但是不能满足用户需求，也没有用。


结合生活经验来理解。


软件测试对象？
	软件源代码
	与软件源代码匹配的文档
	支撑软件源代码运行的配置数据
	但是不同阶段测试对象也会不同：	
		1、需求阶段：
			测试需求文档是否正确实现了用户的需求；
		2、系统设计阶段：
			概要设计文档、详细设计文档、是否有设计或逻辑或上的错误；
		3、编码阶段：
			测试源代码，发现编程上的错误；
		4、系统测试阶段：
			被测对象是否满足用户需求。


测试级别？
	单元测试：
		一般使用自动化工具。针对被测系统最小组成单元实施的测试活动，一般是类或者函数，也可能是最小的功能单元。
		可以发现80%的缺陷。
	
	集成测试：
		针对组件、单元与组件、单元之间的接口实施的测试活动，验证接口设计是否与设计相符。
		分为三种：
			函数间集成
			模块间集成
			子系统间集成
	
	系统测试：
		最常见的测试方式。
		将通过集成测试的软件，部署在真实的用户环境下执行测试，以此发现软件与用户需求的差别。

	验收测试：
		以用户为主的测试，验收组应该由项目组成员、用户代表组成。

		alpha测试：	
			由用户在开发环境下执行的测试活动，开发者在测试人员身边发现问题及时解决。
			在受控环境下执行测试。
			例如：仅仅在公司内部测试。
		beta测试：
			开发者和用户不在测试人员身边，发现问题由专人统一收集，再由研发人员进行修改。
			在不受控环境下执行测试。
			例如游戏内测公开对用户测试。

		UAT测试：
			用户接受测试，一般是商业用户验证系统可用性进行的测试。



系统测试类型：
	1、功能性测试：
		在指定使用条件下，使用被测对象，验证其是否满足用户显性需求（例如筛选数据并升序）。
		测试关注点：
			1、是否有不正确、遗漏、多余的功能，例如点菜是否按照菜单上菜、上多了或遗漏了；
			2、满足系统显性或隐性需求；
			3、是否对输入输出做出正确响应，输出结果是否正确地显示。
			

	2、性能测试
	3、安全性测试
	4、兼容性测试

	





功能测试：
